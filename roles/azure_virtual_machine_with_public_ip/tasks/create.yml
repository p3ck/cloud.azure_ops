---
# Pre-flight checks
- name: Ensure admin username is defined
  ansible.builtin.fail:
    msg: "Missing parameter: key 'admin_username' not found in azure_virtual_machine_with_public_ip_vm"
  when:
    - azure_virtual_machine_with_public_ip_vm.swap_os_disk is not defined
    - azure_virtual_machine_with_public_ip_vm.admin_username is not defined

- name: Ensure vm size is defined
  ansible.builtin.fail:
    msg: "Missing parameter: key 'size' not found in azure_virtual_machine_with_public_ip_vm"
  when: azure_virtual_machine_with_public_ip_vm.size is not defined

- name: Ensure vm image or swap_os_disk is defined
  ansible.builtin.fail:
    msg: "Missing parameter: key 'image' or 'swap_os_disk' not found in azure_virtual_machine_with_public_ip_vm"
  when:
    - azure_virtual_machine_with_public_ip_vm.image is not defined
    - azure_virtual_machine_with_public_ip_vm.swap_os_disk is not defined

- name: Check that Azure Region is known
  ansible.builtin.fail:
    msg: Azure location must be defined as azure_virtual_machine_with_public_ip_region
  when:
    - azure_virtual_machine_with_public_ip_rg_info.resourcegroups | length == 0
    - azure_virtual_machine_with_public_ip_region is not defined

- name: Create resource group if it doesn't already exists
  ansible.builtin.include_role:
    name: cloud.azure_ops.azure_manage_resource_group
  vars:
    azure_manage_resource_group_operation: create
    azure_manage_resource_group_name: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
    azure_manage_resource_group_region: "{{ azure_virtual_machine_with_public_ip_region }}"
    azure_manage_resource_group_tags: "{{ azure_virtual_machine_with_public_ip_tags | default({}) }}"
  when: azure_virtual_machine_with_public_ip_rg_info.resourcegroups | length == 0

# Set tags for VM
- name: Set tags for VM
  ansible.builtin.set_fact:
    azure_virtual_machine_with_public_ip_vm_tags: "{{ azure_virtual_machine_with_public_ip_tags | default({}) }}"

# If nic is not specified, create virtual network if needed and create default public ip & nic
- name: Ensure default nic and default public ip
  when: azure_virtual_machine_with_public_ip_vm.network_interfaces is undefined
  block:
    - name: No network interface specified -> get virtual network info
      azure.azcollection.azure_rm_virtualnetwork_info:
        resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
      register: azure_virtual_machine_with_public_ip_vnet_info

    - name: Create virtual network if not already exist
      when: azure_virtual_machine_with_public_ip_vnet_info.virtualnetworks | length == 0
      block:
        - name: Check virtual network CIDR address prefixes
          ansible.builtin.fail:
            msg: Azure virtual network CIDR address prefixes must be defined as azure_virtual_machine_with_public_ip_vm.vnet_address_prefixes_cidr
          when: azure_virtual_machine_with_public_ip_vm.vnet_address_prefixes_cidr is not defined

        - name: Check subnet CIDR address prefixes
          ansible.builtin.fail:
            msg: Azure subnet CIDR address prefixes must be defined as azure_virtual_machine_with_public_ip_vm.subnet_address_prefixes_cidr
          when: azure_virtual_machine_with_public_ip_vm.subnet_address_prefixes_cidr is not defined

        - name: Create virtual network and subnet
          ansible.builtin.include_role:
            name: cloud.azure_ops.azure_manage_networking_stack
          vars:
            azure_manage_networking_stack_operation: create
            azure_manage_networking_stack_resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
            azure_manage_networking_stack_virtual_network: "{{ azure_virtual_machine_with_public_ip_vm_name }}"
            azure_manage_networking_stack_subnet: "{{ azure_virtual_machine_with_public_ip_vm_name }}"
            azure_manage_networking_stack_vnet_address_prefixes_cidr: "{{ azure_virtual_machine_with_public_ip_vm.vnet_address_prefixes_cidr }}"
            azure_manage_networking_stack_subnet_address_prefixes_cidr: "{{ azure_virtual_machine_with_public_ip_vm.subnet_address_prefixes_cidr }}"
            azure_manage_networking_stack_tags:
              _own_vnet_: "{{ azure_virtual_machine_with_public_ip_vm_name }}"

    - name: Refresh virtual network info
      azure.azcollection.azure_rm_virtualnetwork_info:
        resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
      register: azure_virtual_machine_with_public_ip_vnet_info

    - name: Create default public ip for default nic
      azure.azcollection.azure_rm_publicipaddress:
        resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
        name: "{{ azure_virtual_machine_with_public_ip_vm_name }}"
        allocation_method: static

    - name: Create default nic with default security group and public ip
      ansible.builtin.include_role:
        name: cloud.azure_ops.azure_manage_network_interface
      vars:
        azure_manage_network_interface_operation: create
        azure_manage_network_interface_resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
        azure_manage_network_interface_interface:
          name: "{{ azure_virtual_machine_with_public_ip_vm_name }}"
          vnet_name: "{{ azure_virtual_machine_with_public_ip_vnet_info.virtualnetworks[0].name }}" # This is how the azure_rm_virtualmachine module creates its default network interface - using the first vnet
          subnet_name: "{{ azure_virtual_machine_with_public_ip_vnet_info.virtualnetworks[0].subnets[0].name }}"
          ip_configurations:
            - name: default
              primary: true
              public_ip_address_name: "{{ azure_virtual_machine_with_public_ip_vm_name }}"
              load_balancer_backend_address_pools: "{{ azure_virtual_machine_with_public_ip_vm.load_balancer_backend_address_pools | default(omit) }}"

    - name: Tag all autocreated resources for cleanup
      ansible.builtin.set_fact:
        azure_virtual_machine_with_public_ip_vm_tags: "{{ azure_virtual_machine_with_public_ip_vm_tags | combine({'_own_pip_': azure_virtual_machine_with_public_ip_vm_name}, {'_own_nic_': azure_virtual_machine_with_public_ip_vm_name}, {'_own_nsg_': azure_virtual_machine_with_public_ip_vm_name}) }}"

# Create availability set if doesn't exist
- name: Get availability set info
  azure.azcollection.azure_rm_availabilityset_info:
    resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
    name: "{{ azure_virtual_machine_with_public_ip_availability_set.name }}"
  register: azure_virtual_machine_with_public_ip_aset_info
  when: azure_virtual_machine_with_public_ip_availability_set is defined

- name: Create availability set
  azure.azcollection.azure_rm_availabilityset:
    resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
    name: "{{ azure_virtual_machine_with_public_ip_availability_set.name }}"
    platform_update_domain_count: "{{ azure_virtual_machine_with_public_ip_availability_set.platform_update_domain_count | default(omit) }}"
    platform_fault_domain_count: "{{ azure_virtual_machine_with_public_ip_availability_set.platform_fault_domain_count | default(omit) }}"
    sku: "{{ azure_virtual_machine_with_public_ip_availability_set.sku | default(omit) }}"
    tags:
      _own_availability_set_: "{{ azure_virtual_machine_with_public_ip_availability_set.name }}"
  when:
    - azure_virtual_machine_with_public_ip_availability_set is defined
    - azure_virtual_machine_with_public_ip_aset_info.ansible_info.azure_availabilitysets | length == 0

# Create/update VM
- name: Create/Update VM
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ azure_virtual_machine_with_public_ip_resource_group }}"
    name: "{{ azure_virtual_machine_with_public_ip_vm_name }}"
    vm_size: "{{ azure_virtual_machine_with_public_ip_vm.size | default(omit) }}"
    network_interfaces: "{{ azure_virtual_machine_with_public_ip_vm.network_interfaces | default(azure_virtual_machine_with_public_ip_vm_name) }}"
    os_type: "{{ azure_virtual_machine_with_public_ip_vm.os | default(omit) }}"
    managed_disk_type: "{{ azure_virtual_machine_with_public_ip_vm.managed_disk_type | default(omit) }}"
    availability_set: "{{ azure_virtual_machine_with_public_ip_availability_set.name | default(omit) }}"
    image: "{{ azure_virtual_machine_with_public_ip_vm.image | default(omit) }}"
    plan: "{{ azure_virtual_machine_with_public_ip_vm.plan | default(omit) }}"
    accept_terms: "{{ azure_virtual_machine_with_public_ip_vm.accept_terms | default(omit) }}"
    swap_os_disk: "{{ azure_virtual_machine_with_public_ip_vm.swap_os_disk | default(omit) }}"
    admin_username: "{{ azure_virtual_machine_with_public_ip_vm.admin_username | default(omit) }}"
    admin_password: "{{ azure_virtual_machine_with_public_ip_vm.admin_password | default(omit) }}"
    ssh_password_enabled: "{{ azure_virtual_machine_with_public_ip_vm.ssh_pw_enabled | default(omit) }}"
    ssh_public_keys: "{{ azure_virtual_machine_with_public_ip_vm.ssh_public_keys | default(omit) }}"
    data_disks: "{{ azure_virtual_machine_with_public_ip_vm.data_disks | default(omit) }}"
    tags: "{{ azure_virtual_machine_with_public_ip_vm_tags }}"
