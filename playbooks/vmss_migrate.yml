---
- name: Migrate a web app application from one region to another region
  hosts: localhost
  gather_facts: false

  vars_files:
    - vars/vmss_migrate_vars.yml

  tasks:
    - name: Pre-flight check
      ansible.builtin.fail:
        msg: Source Azure Resource group must be defined as source_resource_group
      when: source_resource_group is not defined

    - name: Pre-flight check
      ansible.builtin.fail:
        msg: Destination Azure Resource group must be defined as destination_resource_group
      when: destination_resource_group is not defined

    - name: Pre-flight check
      ansible.builtin.fail:
        msg: Source and Destination Azure resource group can not be same
      when: source_resource_group == destination_resource_group

    - name: Gather information about Source VM Scale Set
      azure.azcollection.azure_rm_virtualmachinescaleset_info:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_vm_name }}ss"
      register: src_vm_info

    - name: Pre-flight check
      ansible.builtin.fail:
        msg: Couldn't find web app resources in source_resource_group
      when: src_vm_info.vmss | length == 0

    - name: Create application infrastructure
      block:
        - name: Create application infrastructure
          ansible.builtin.import_role:
            name: scale_virtual_machine
          vars:
            scale_virtual_machine_resource_group: "{{ destination_resource_group }}"
            scale_virtual_machine_region: "{{ destination_region }}"
            scale_virtual_machine_number_vm: "{{ src_vm_info.vmss.0.sku.capacity }}"
            scale_virtual_machine_vm_image: "{{ src_vm_info.vmss.0.properties.virtualMachineProfile.storageProfile.imageReference }}"
            scale_virtual_machine_vm_size: "{{ src_vm_info.vmss.0.sku.name }}"
            scale_virtual_machine_load_balancer:
              domain_name: "{{ destination_resource_group | replace('_', '-') }}-{{ destination_region | replace('_', '-') }}-webapp1"
              name: "{{ source_resource_group }}-lb"
              public_ip_name: "{{ source_resource_group }}-lb-public-ipp"
              backend_address_pool: "{{ source_resource_group }}-vm-pool"
            scale_virtual_machine_operation: create
      rescue:
        - name: Print failed message
          ansible.builtin.debug:
            msg: Failed to migrate, cleaning up destination resource group

        - name: Delete application infrastructure
          ansible.builtin.import_role:
            name: scale_virtual_machine
          vars:
            scale_virtual_machine_azure_resource_group: "{{ destination_resource_group }}"
            scale_virtual_machine_operation: delete

        - name: Failed to create application infrastructure
          ansible.builtin.fail:
            msg: Failed to migrate

- name: Deploy resource from Bastion Host
  hosts: bastion
  gather_facts: false

  vars:
    ansible_venv_path: ~/venv
    application_data: /tmp/controller
    application_image: controller-image
    application_container: controller-container
    application_config: /tmp/controller/config.txt

  vars_files:
    - vars/vmss_migrate_vars.yml

  tasks:
    - name: Update ssh_config
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regex: "{{ item.regex }}"
        line: "{{ item.line }}"
      loop:
        - regex: ^(# *)?ClientAliveInterval
          line: ClientAliveInterval  1200
        - regex: ^(# *)?ClientAliveCountMax
          line: ClientAliveCountMax 3
      become: true

    - name: Ensure python3 is installed
      ansible.builtin.yum:
        name:
          - python3
          - python3-virtualenv
          - sshpass
          - git
        state: present
      become: true

    - name: Create virtualenv
      ansible.builtin.pip:
        virtualenv: "{{ ansible_venv_path }}"
        virtualenv_python: python3
        name: ansible
        state: latest
        update_only: true

    - name: Create application directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - "{{ ansible_venv_path }}/playbook"
        - "{{ ansible_venv_path }}/playbook/tasks"

    - name: Create inventory file
      ansible.builtin.template:
        src: workers.j2
        dest: "{{ ansible_venv_path }}/playbook/inventory.yaml"
        mode: "0644"
      register: inv_result

    - name: Create vars file
      ansible.builtin.template:
        src: application-data.j2
        dest: "{{ ansible_venv_path }}/playbook/vars.yaml"
        mode: "0644"
      vars:
        azure_postgresql_name: "{{ source_resource_group | replace('_', '-') }}-dbserver"
      register: vars_result

    - name: Copy playbook file
      ansible.builtin.copy:
        src: deploy-app.yml
        dest: "{{ ansible_venv_path }}/playbook/play.yaml"
        mode: "0644"
      register: play_result

    - name: Git clone ensure-docker role # noqa latest
      ansible.builtin.git:
        repo: https://opendev.org/zuul/zuul-jobs.git
        dest: "{{ ansible_venv_path }}/playbook/zuul-jobs"
      register: git_result

    - name: Deploy application # noqa no-handler
      when: inv_result.changed or vars_result.changed or play_result.changed or git_result.changed
      ansible.builtin.shell: source {{ ansible_venv_path }}/bin/activate; ansible-playbook play.yaml -i inventory.yaml -e '@vars.yaml' -v -f {{ playbook_number_forks
        }}
      environment:
        ANSIBLE_ROLES_PATH: "{{ ansible_venv_path }}/playbook/zuul-jobs/roles"
      args:
        chdir: "{{ ansible_venv_path }}/playbook"
      changed_when: false

- name: Cleanup web application resources
  hosts: localhost
  gather_facts: false

  vars_files:
    - vars/vmss_migrate_vars.yml

  tasks:
    - name: Check the status of the app
      block:
        - name: Check that you can connect (GET) to a page and it returns a status 200
          ansible.builtin.uri:
            url: http://{{ scale_virtual_machine_load_balancer_public_ip }}:5000
          when: scale_virtual_machine_load_balancer_public_ip is defined
      rescue:
        - name: Print failed message
          ansible.builtin.debug:
            msg: Failed to reach the given URL at http://{{ scale_virtual_machine_load_balancer_public_ip }}:5000, cleaning up destination resource group

        - name: Delete application infrastructure
          ansible.builtin.import_role:
            name: scale_virtual_machine
          vars:
            scale_virtual_machine_resource_group: "{{ destination_resource_group }}"
            scale_virtual_machine_operation: delete

        - name: Failed to connect
          ansible.builtin.fail:
            msg: Failed to reach the given URL at http://{{ scale_virtual_machine_load_balancer_public_ip }}:5000

    - name: Set source resource group variables
      ansible.builtin.set_fact:
        azure_virtual_network: "{{ source_resource_group }}-vnet"
        azure_subnet: "{{ source_resource_group }}-subnet"
        azure_security_group: "{{ source_resource_group }}-nsg"
        azure_load_balancer:
          name: "{{ source_resource_group }}-lb"
          public_ip_name: "{{ source_resource_group }}-lb-public-ip"

    - name: Remove Bastion host
      azure.azcollection.azure_rm_virtualmachine:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_vm_name }}bastion"
        state: absent

    - name: Remove Virtual machine scale set
      azure.azcollection.azure_rm_virtualmachinescaleset:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_vm_name }}ss"
        state: absent

    - name: Delete virtual network
      azure.azcollection.azure_rm_virtualnetwork:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_virtual_network }}"
        state: absent

    - name: Delete subnet
      azure.azcollection.azure_rm_subnet:
        resource_group: "{{ source_resource_group }}"
        virtual_network: "{{ azure_virtual_network }}"
        name: "{{ azure_subnet }}"
        state: absent

    - name: Delete load balancer
      azure.azcollection.azure_rm_loadbalancer:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_load_balancer.name }}"
        state: absent

    - name: Delete a public IP address
      azure.azcollection.azure_rm_publicipaddress:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_load_balancer.public_ip_name }}"
        state: absent

    - name: Delete networking security group
      azure.azcollection.azure_rm_securitygroup:
        resource_group: "{{ source_resource_group }}"
        name: "{{ azure_security_group }}"
        state: absent

    - name: Print web application URL
      ansible.builtin.debug:
        msg: Web application accessible at http://{{ scale_virtual_machine_load_balancer_public_ip }}:5000
